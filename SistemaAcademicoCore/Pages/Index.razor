@page "/"
@page "/{Message}"
@using SistemaAcademicoApplication.Avisos.Queries
@using System.Security.Claims
@layout MainLayout
@inject IMediator _mediator
@inject IToastService _toastService

@*@attribute [Authorize(Policy = Policies.IsAdmin)]*@



<PageTitle>Administração - SistemaAcademico</PageTitle>

@if (Avisos == null)
{
    <br />
    <br />
    <br />
    <center>
        <img src="https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif" class="align-content-center" />
    </center>
}
else
{
    <div class="card">
        <div class="card-header">
            <div class="titulo-card">
                Quadro de avisos - Admin
            </div>
        </div>
        <div class="card-body">
            <div class="form-group">
            </div>
        </div>
    </div>
}


@*<AuthorizeView Policy="@Policies.IsAluno">
    <Authorized>
        <PageTitle>Aluno - SistemaAcademico</PageTitle>
        @if (Avisos == null)
        {
            <br />
            <br />
            <br />
            <center>
                <img src="https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif" class="align-content-center" />
            </center>
        }
        else
        {
            <div class="card">
                <div class="card-header">
                    <div class="titulo-card">
                        Quadro de avisos - Aluno
                    </div>
                </div>
                <div class="card-body">
                    <div class="form-group">
                    </div>
                </div>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <p>Não autorizado</p>
    </NotAuthorized>
</AuthorizeView>

<AuthorizeView Policy="@Policies.IsProfessor">
    <PageTitle>Professor - SistemaAcademico</PageTitle>

    @if (Avisos == null)
    {
        <br />
        <br />
        <br />
        <center>
            <img src="https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif" class="align-content-center" />
        </center>
    }
    else
    {
        <div class="card">
            <div class="card-header">
                <div class="titulo-card">
                    Quadro de avisos - Professor
                </div>
            </div>
            <div class="card-body">
                <div class="form-group">
                </div>
            </div>
        </div>
    }
</AuthorizeView>*@

@code {
    [Parameter]
    public string Message { get; set; }

    private List<Aviso> Avisos;
    bool IsUserAuthenticated;
    ClaimsPrincipal user;

    protected override async Task OnInitializedAsync()
    {
        var ultimosAvisos = await _mediator.Send(new ObterUltimosAvisosQuery());

        if (ultimosAvisos.Errors.Any())
        {
            _toastService.ShowInfo("Erro ao carregar os últimos avisos");
        }

        Avisos = ultimosAvisos.Result;

    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            if (Message != null)
            {
                _toastService.ShowError(Message);
            }
        }
    }
}