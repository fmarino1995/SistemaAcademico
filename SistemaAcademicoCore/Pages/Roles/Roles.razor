@page "/roles"
@using SistemaAcademicoApplication.Roles.Queries

@inject IRoleService _roleService
@inject NavigationManager _navigationManager

<div class="card">
    <div class="card-header">
        <div class="titulo-card">
            Perfis de usuário
        </div>
    </div>
    <div class="card-body">
        <DataTable Searchable="true" Exibir="@Exibir">
            <thead class="thead-light">
                <tr>
                    <th class="col-sm-4">Id</th>
                    <th class="col-sm-5">Nome</th>
                    <th>
                        <a href="/AddRole" title="Novo">
                            <span class="oi oi-plus"></span>
                        </a>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var role in RolesList)
                {
                    <tr>
                        <td>@role.Id</td>
                        <td>@role.Name</td>
                        <td style="width: 6%;">
                            <a href="/EditRole" title="Editar">
                                <span class="oi oi-pencil" aria-hidden="true"></span>
                            </a>
                            <a href="/RemoveRole" title="Excluir">
                                <span class="oi oi-trash" aria-hidden="true"></span>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </DataTable>
    </div>
</div>

@code {
    bool Exibir = false;

    List<IdentityRole> RolesList = new List<IdentityRole>();

    protected async override Task OnInitializedAsync()
    {
        RolesList = await _roleService.GetRolesAsnyc(); ;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (!firstRender)
        {
            Exibir = true;
            this.StateHasChanged();
        }
    }
}
